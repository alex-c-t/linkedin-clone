{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\vscode\\\\linkedin-clone\\\\src\\\\Feeds.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Feed.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputOptions from './InputOptions';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\nimport { db } from './firebase1';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feeds = () => {\n  _s();\n\n  const user = useSelector(selectUser);\n  const [input, setInput] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => setPosts(snapshot.docs.map(doc => ({\n      id: doc.id,\n      data: doc.data()\n    }))));\n  }, []);\n\n  const sendPost = e => {\n    e.preventDefault();\n    db.collection('posts').add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || \"\",\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed__inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__input\",\n        children: [/*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: sendPost,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__inputOptions\",\n        children: [/*#__PURE__*/_jsxDEV(InputOptions, {\n          Icon: ImageIcon,\n          title: \"Photo\",\n          colorProp: \"#70B5F9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOptions, {\n          Icon: SubscriptionsIcon,\n          title: \"Video\",\n          colorProp: \"#E7A33E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOptions, {\n          Icon: EventNoteIcon,\n          title: \"Event\",\n          colorProp: \"#C0CBCD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputOptions, {\n          Icon: CalendarViewDayIcon,\n          title: \"Write articlae\",\n          colorProp: \"#7FC15E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n      children: posts.map(({\n        id,\n        data: {\n          name,\n          description,\n          message,\n          photoUrl\n        }\n      }) => /*#__PURE__*/_jsxDEV(Post, {\n        name: name,\n        description: description,\n        message: message,\n        photoUrl: photoUrl\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Feeds, \"k+SXR5R4T4LmWA6pltzytYi/NO0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Feeds;\nexport default Feeds;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feeds\");","map":{"version":3,"sources":["C:/Users/Alex/vscode/linkedin-clone/src/Feeds.js"],"names":["React","useEffect","useState","CreateIcon","InputOptions","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Post","db","firebase","useSelector","selectUser","FlipMove","Feeds","user","input","setInput","posts","setPosts","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","sendPost","e","preventDefault","add","name","displayName","description","email","message","photoUrl","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Feed.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputOptions from './InputOptions';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\nimport {db} from './firebase1';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\n\nconst Feeds = () => {\n\n    const user = useSelector(selectUser);\n\n    const [input, setInput] = useState(\"\");\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() =>{\n        db.collection(\"posts\").orderBy('timestamp','desc').onSnapshot((snapshot) => \n            setPosts(\n                snapshot.docs.map((doc) =>(\n                {\n                    id:doc.id,\n                    data:doc.data(),\n                }\n            ))\n        )\n        );\n    },[]);\n\n    const sendPost = e =>{\n        e.preventDefault();\n        db.collection('posts').add({\n            name: user.displayName,\n            description:user.email,\n            message: input,\n            photoUrl: user.photoUrl || \"\",\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        setInput(\"\")\n    }\n\n    return (\n        <div className = \"feed\">\n            <div className=\"feed__inputContainer\">\n                <div className=\"feed__input\"> \n                    <CreateIcon />\n                    <form>\n                        <input type = \"text\" value = {input} onChange = {e => setInput(e.target.value)}/>\n                        <button type= \"submit\" onClick = {sendPost}>Send</button>\n                    </form>\n                </div>\n                <div className=\"feed__inputOptions\">\n                    <InputOptions Icon = {ImageIcon} title = \"Photo\" colorProp = \"#70B5F9\"/>\n                    <InputOptions Icon = {SubscriptionsIcon} title = \"Video\" colorProp = \"#E7A33E\"/>\n                    <InputOptions Icon = {EventNoteIcon} title = \"Event\" colorProp = \"#C0CBCD\"/>\n                    <InputOptions Icon = {CalendarViewDayIcon} title = \"Write articlae\" colorProp = \"#7FC15E\"/>\n                </div>\n            </div>\n            {/* Posts */}\n            <FlipMove>\n                {posts.map(({id, data: {name, description, message, photoUrl}}) => (\n                    <Post key = {id} name = {name} description ={description} message ={message} photoUrl = {photoUrl}/>\n                ))}\n            </FlipMove>\n        </div>\n    );\n}\n\nexport default Feeds\n"]},"metadata":{},"sourceType":"module"}