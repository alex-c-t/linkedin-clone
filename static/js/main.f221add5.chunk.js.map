{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase1.js","Header.js","Sidebar.js","InputOptions.js","Post.js","Feeds.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onclick","useSelector","onClick","className","Avatar","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","src","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","photoUrl","InputOptions","colorProp","style","color","Post","forwardRef","ref","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feeds","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","diaplayName","photoURL","catch","err","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f221add5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user:null,\n};\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload\n    },\n    logout: (state) => {\n      state.user = null\n    },\n  },\n\n});\n\nexport const { login, logout } = userSlice.actions;\n\n//Selectors\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { Avatar } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport './HeaderOption.css';\n\n\nconst HeaderOption = ({avatar,Icon, title, onclick}) => {\n    const user = useSelector(selectUser);\n    return (\n        <div onClick = {onclick} className = 'headerOption'>\n            {Icon && <Icon className = \"headerOption__icon\"/>}\n            {avatar && (<Avatar className = \"headerOption__icon\">{user?.email[0]}</Avatar>)}\n            <h3 className = \"headerOption__title\">{title}</h3>\n        </div>\n    )\n}\n\nexport default HeaderOption\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCPw63IFqYK5yeQOO3uOO54LHDwwwGoaIo\",\n  authDomain: \"linkedin-clone-e0c72.firebaseapp.com\",\n  projectId: \"linkedin-clone-e0c72\",\n  storageBucket: \"linkedin-clone-e0c72.appspot.com\",\n  messagingSenderId: \"608499370539\",\n  appId: \"1:608499370539:web:e50940521fafcd7bb8f86e\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth()\n\nexport {db, auth};\n","import React from 'react'\nimport './Header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount'\nimport HeaderOption from './HeaderOption';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { useDispatch } from 'react-redux';\nimport { logout, selectUser } from './features/userSlice';\nimport { auth } from './firebase1';\nimport { useSelector } from 'react-redux';\n\n\nconst Header = () => {\n\n    const user = useSelector(selectUser);\n    const dispatch = useDispatch();\n\n    const logOutApp = () => {\n        dispatch(logout());\n        auth.signOut(); \n    }\n\n    return (\n        <div className=\"header\">\n            <div className=\"header__left\">\n                <img src = \"https://www.raulvelazquezphd.com/wp-content/uploads/2017/10/LinkedIn-1.png\" alt = \"\" />\n                <div className=\"header__search\">\n                    <SearchIcon />\n                    <input placeholder = \"Search\" type = \"text\" />\n                </div>\n            </div>\n\n            <div className=\"header__right\">\n                <HeaderOption Icon={HomeIcon} title = \"home\"/>\n                <HeaderOption Icon = {SupervisorAccountIcon} title = \"My Network\"/>\n                <HeaderOption Icon={BusinessCenterIcon} title = \"Jobs\"/>\n                <HeaderOption Icon = {ChatIcon} title = \"Messaging\"/>\n                <HeaderOption Icon = {NotificationsIcon} title = \"Notifications\"/>\n                <HeaderOption avatar = {true} title = 'me' onclick = {logOutApp} />\n            </div>\n        </div>\n\n    )\n}\n\nexport default Header\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\nimport './Sidebar.css'\n\nconst Sidebar = () => {\n\n    const user = useSelector(selectUser);\n\n    const recentItem = (topic) =>(\n        <div className=\"sidebar__recentItem\">\n            <span className=\"sidebar__hash\">#</span>\n            <p>{topic}</p>\n        </div>\n\n  )\n\n    return (\n        <div className= \"sidebar\">\n            <div className=\"sidebar__top\">\n                <img \n                src = \"https://images.unsplash.com/photo-1579546929518-9e396f3cc809?xlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxleHBsb3JILZWR8MXx8fGVufDB8fHw%3D&w=1000&q=80\"\n                alt = \"sidebar-bg-pic\" />\n                <Avatar src = {user.photoUrl} className = \"sidebar__avatar\">{user.email[0]}</Avatar>\n                <h2>{user.name}</h2>\n                <h4>{user.email}</h4>\n            </div>\n\n            <div className=\"sidebar__stats\">\n                <div className=\"sidebar__stat\">\n                    <p>who viewed you </p>    \n                    <p className = \"sidebar__statNumber\"> 2,534</p>\n                </div>\n                <div className=\"sidebar__stat\">\n                    <p>views on posts </p>    \n                    <p className = \"sidebar__statNumber\"> 2,334</p>\n                </div>\n            </div>\n            <div className=\"sidebar__bottom\">\n                <p>Recent</p>\n                {recentItem(\"reactjs\")}\n                {recentItem(\"programming\")}\n                {recentItem(\"software engineering\")}\n                {recentItem(\"design\")}\n                {recentItem(\"developer\")}\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default Sidebar\n","import React from 'react';\nimport './InputOptions.css';\nconst InputOptions = ({Icon, title, colorProp}) => {\n    return (\n        <div className = \"inputOption\">\n            <Icon style = {{color:colorProp}}/>\n            <h4>{title}</h4>\n        </div>\n    )\n}\n\nexport default InputOptions\n","import { Avatar } from '@material-ui/core';\nimport React, { forwardRef } from 'react'\nimport InputOptions from './InputOptions';\nimport './Post.css';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\n\nconst Post = forwardRef(({name, description, message, photoUrl}, ref) => {\n    return (\n        <div ref ={ref} className = \"post\">\n            <div className=\"post__header\">\n                <Avatar src={photoUrl?photoUrl:\"https://brandyourself.com/blog/wp-content/uploads/linkedin-profile-picture-too-close.png\"} alt = {name[0]} />\n                <div className = \"post__info\">\n                    <h2>{name}</h2>\n                    <p>{description}</p>\n                </div>\n            </div>\n            <div className=\"post__body\">\n                <p>{message}</p>\n            </div>\n            <div className=\"post__buttons\">\n                <InputOptions Icon = {ThumbUpAltOutlinedIcon} title=\"Like\" colorProp = \"gray\" />\n                <InputOptions Icon = {ChatOutlinedIcon} title=\"Comment\" colorProp = \"gray\" />\n                <InputOptions Icon = {ShareOutlinedIcon} title=\"Share\" colorProp = \"gray\" />\n                <InputOptions Icon = {SendOutlinedIcon} title=\"Send\" colorProp = \"gray\" />\n            </div>\n        </div>\n    )\n}\n);\n\nexport default Post\n","import React, { useEffect, useState } from 'react';\nimport './Feed.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InputOptions from './InputOptions';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport Post from './Post';\nimport {db} from './firebase1';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport FlipMove from 'react-flip-move';\n\nconst Feeds = () => {\n\n    const user = useSelector(selectUser);\n\n    const [input, setInput] = useState(\"\");\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() =>{\n        db.collection(\"posts\").orderBy('timestamp','desc').onSnapshot((snapshot) => \n            setPosts(\n                snapshot.docs.map((doc) =>(\n                {\n                    id:doc.id,\n                    data:doc.data(),\n                }\n            ))\n        )\n        );\n    },[]);\n\n    const sendPost = e =>{\n        e.preventDefault();\n        db.collection('posts').add({\n            name: user.displayName,\n            description:user.email,\n            message: input,\n            photoUrl: user.photoUrl || \"\",\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        setInput(\"\")\n    }\n\n    return (\n        <div className = \"feed\">\n            <div className=\"feed__inputContainer\">\n                <div className=\"feed__input\"> \n                    <CreateIcon />\n                    <form>\n                        <input type = \"text\" value = {input} onChange = {e => setInput(e.target.value)}/>\n                        <button type= \"submit\" onClick = {sendPost}>Send</button>\n                    </form>\n                </div>\n                <div className=\"feed__inputOptions\">\n                    <InputOptions Icon = {ImageIcon} title = \"Photo\" colorProp = \"#70B5F9\"/>\n                    <InputOptions Icon = {SubscriptionsIcon} title = \"Video\" colorProp = \"#E7A33E\"/>\n                    <InputOptions Icon = {EventNoteIcon} title = \"Event\" colorProp = \"#C0CBCD\"/>\n                    <InputOptions Icon = {CalendarViewDayIcon} title = \"Write articlae\" colorProp = \"#7FC15E\"/>\n                </div>\n            </div>\n            {/* Posts */}\n            <FlipMove>\n                {posts.map(({id, data: {name, description, message, photoUrl}}) => (\n                    <Post key = {id} name = {name} description ={description} message ={message} photoUrl = {photoUrl}/>\n                ))}\n            </FlipMove>\n        </div>\n    );\n}\n\nexport default Feeds\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport {auth} from './firebase1';\nimport './Login.css';\nimport {login} from './features/userSlice';\n\n\nconst Login = () => {\n\n    const[email, setEmail] = useState(\"\");\n    const[password, setPassword] = useState(\"\");\n    const[name, setName] = useState(\"\");\n    const[profilePic, setProfilePic] = useState(\"\");\n    const dispatch = useDispatch();\n\n\n    const loginToApp = (e) =>{\n        e.preventDefault();\n\n        auth.signInWithEmailAndPassword(email, password)\n        .then((userAuth) =>{\n            dispatch(login({\n                email:userAuth.user.email,\n                uid: userAuth.user.uid,\n                diaplayName: userAuth.user.displayName,\n                photoUrl:userAuth.user.photoURL,\n            }))\n        })\n        .catch(err =>alert(err))\n\n    };\n\n    const register = () =>{\n        if(!name){\n            return alert(\"Please enter the Full Name!\");\n        }\n        auth.createUserWithEmailAndPassword(email, password).then((userAuth) => {\n            userAuth.user.updateProfile({\n                displayName:name,\n                photoURL:profilePic,\n            })\n            .then(() =>{\n                dispatch(\n                    login({\n                    email:userAuth.user.email,\n                    uid: userAuth.uid,\n                    displayName: name,\n                    photoUrl: profilePic,\n                }));\n            });\n        })\n        .catch((err) => alert(err));\n       \n    };\n\n    return (\n        <div className =\"login\">\n            <img src = \"https://www.amocrm.com/static/images/pages/integrations/logo/linkedin.png\"\n            alt= \"\"\n            />\n            <form>\n                <input type = \"text\" placeholder = \"Full Name (required for registration)\" value = {name} onChange = {e => setName(e.target.value)}/>\n                <input type = \"text\" placeholder = \"Profile pic URL (optional)\" value={profilePic} onChange = {e => setProfilePic(e.target.value)} />\n                <input type = \"email\" placeholder = \"Email\" value = {email} onChange = {e => setEmail(e.target.value)} />\n                <input type = \"password\" placeholder = \"Password\" value = {password} onChange = {e => setPassword(e.target.value)}/>\n                <button type= \"submit\" onClick = {loginToApp}>Sign In</button>\n            </form>\n            <p>Not a member? {\" \"}\n                <span className = \"login__register\" onClick = {register}> Register Now</span>\n            </p>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport './Widget.css'\nimport InfoIcon from '@material-ui/icons/Info';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nconst Widgets = () => {\n\n    const newArticle = (heading, subtitle) =>(\n        <div className=\"widgets__article\">\n            <div className=\"widgets__articleLeft\">\n                <FiberManualRecordIcon />\n            </div>\n\n            <div className=\"widgets__articleRight\">\n                <h4>{heading}</h4>\n                <p>{subtitle}</p>\n            </div>\n        </div>\n    )\n    return (\n        <div className = \"widgets\">\n            <div className=\"widgets__header\">\n                <h2>LinkedIn News</h2>\n                <InfoIcon />\n            </div>\n            {newArticle(\"Article one is here\", \"Top news -9099 redaers\")}\n            {newArticle(\"Article two is here\", \"Top news -888 redaers\")}\n            {newArticle(\"Article three is here\", \"Top news -4454 redaers\")}\n            {newArticle(\"Article four is here\", \"Top news -454 redaers\")}\n        </div>\n    )\n}\n\nexport default Widgets\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Feeds from './Feeds';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { auth } from './firebase1';\nimport { useDispatch } from 'react-redux';\nimport {login, logout} from './features/userSlice'\nimport Widgets from './Widgets';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const user= useSelector(selectUser);\n  useEffect(()=>{\n    auth.onAuthStateChanged(userAuth =>{\n      if(userAuth){\n        dispatch(\n          login({\n            email: userAuth.email,\n            uid:userAuth.uid,\n            displayName: userAuth.displayName,\n            photoUrl: userAuth.photoURL,\n          })\n        )\n      } else{\n        dispatch(logout());\n      }\n    })\n  },[])\n\n  return (\n    <div className=\"app\">\n      <Header />\n      {!user ? (\n        <Login />):(\n\n      <div className=\"app__body\">\n        <Sidebar />\n        <Feeds />\n        <Widgets />\n      </div>\n\n      )}\n\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}